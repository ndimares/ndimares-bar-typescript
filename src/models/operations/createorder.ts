/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateOrderRequest = {
    /**
     * The url to call when the order is updated.
     */
    callbackUrl?: string | undefined;
    requestBody: Array<components.OrderInput>;
};

export type CreateOrderResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * The order was created successfully.
     */
    order?: components.Order | undefined;
    /**
     * An unknown error occurred interacting with the API.
     */
    error?: components.ErrorT | undefined;
};

/** @internal */
export namespace CreateOrderRequest$ {
    export const inboundSchema: z.ZodType<CreateOrderRequest, z.ZodTypeDef, unknown> = z
        .object({
            callback_url: z.string().optional(),
            RequestBody: z.array(components.OrderInput$.inboundSchema),
        })
        .transform((v) => {
            return {
                ...(v.callback_url === undefined ? null : { callbackUrl: v.callback_url }),
                requestBody: v.RequestBody,
            };
        });

    export type Outbound = {
        callback_url?: string | undefined;
        RequestBody: Array<components.OrderInput$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateOrderRequest> = z
        .object({
            callbackUrl: z.string().optional(),
            requestBody: z.array(components.OrderInput$.outboundSchema),
        })
        .transform((v) => {
            return {
                ...(v.callbackUrl === undefined ? null : { callback_url: v.callbackUrl }),
                RequestBody: v.requestBody,
            };
        });
}

/** @internal */
export namespace CreateOrderResponse$ {
    export const inboundSchema: z.ZodType<CreateOrderResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Order: components.Order$.inboundSchema.optional(),
            Error: components.ErrorT$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Order === undefined ? null : { order: v.Order }),
                ...(v.Error === undefined ? null : { error: v.Error }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Order?: components.Order$.Outbound | undefined;
        Error?: components.ErrorT$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateOrderResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            order: components.Order$.outboundSchema.optional(),
            error: components.ErrorT$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.order === undefined ? null : { Order: v.order }),
                ...(v.error === undefined ? null : { Error: v.error }),
            };
        });
}
