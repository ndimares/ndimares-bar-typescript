/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateOrderOrderUpdateResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * An unknown error occurred interacting with the API.
     */
    error?: components.ErrorT | undefined;
};

export type CreateOrderOrderUpdateRequestBody = {
    /**
     * An order for a drink or ingredient.
     */
    order?: components.OrderInput | undefined;
};

/** @internal */
export namespace CreateOrderOrderUpdateResponse$ {
    export const inboundSchema: z.ZodType<CreateOrderOrderUpdateResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            Error: components.ErrorT$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.Error === undefined ? null : { error: v.Error }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        Error?: components.ErrorT$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateOrderOrderUpdateResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                error: components.ErrorT$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.error === undefined ? null : { Error: v.error }),
                };
            });
}

/** @internal */
export namespace CreateOrderOrderUpdateRequestBody$ {
    export const inboundSchema: z.ZodType<
        CreateOrderOrderUpdateRequestBody,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            order: components.OrderInput$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.order === undefined ? null : { order: v.order }),
            };
        });

    export type Outbound = {
        order?: components.OrderInput$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateOrderOrderUpdateRequestBody
    > = z
        .object({
            order: components.OrderInput$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.order === undefined ? null : { order: v.order }),
            };
        });
}
